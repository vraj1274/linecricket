#!/usr/bin/env python3
"""
TheLineCricket Environment Setup Script
========================================
This script helps you set up the environment configuration for TheLineCricket application.
"""

import os
import secrets
import string
from pathlib import Path

def generate_secret_key(length=50):
    """Generate a secure secret key"""
    alphabet = string.ascii_letters + string.digits + "!@#$%^&*"
    return ''.join(secrets.choice(alphabet) for _ in range(length))

def create_env_file():
    """Create .env file from template"""
    env_content = """# ===========================================
# TheLineCricket Application Environment Variables
# ===========================================
# Generated by setup_environment.py

# ===========================================
# BACKEND CONFIGURATION
# ===========================================

# Flask Configuration
FLASK_ENV=development
FLASK_HOST=0.0.0.0
FLASK_PORT=5000
FLASK_DEBUG=True

# Security Keys (Auto-generated)
SECRET_KEY={secret_key}
JWT_SECRET_KEY={jwt_secret_key}

# Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=linecricket25
DB_USER=postgres
DB_PASSWORD=postgres123
DATABASE_URL=postgresql://postgres:postgres123@localhost:5432/linecricket25

# Email Configuration
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USERNAME=thelinecricket.app@gmail.com
MAIL_PASSWORD=your_app_password_here
FROM_EMAIL=noreply@thelinecricket.com

# SMTP Configuration
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=thelinecricket.app@gmail.com
SMTP_PASSWORD=your_app_password_here
FROM_EMAIL=noreply@thelinecricket.com

# Redis Configuration (Optional - for caching and sessions)
REDIS_URL=redis://localhost:6379/0

# Firebase Configuration (Backend Admin SDK)
FIREBASE_PROJECT_ID=thelinecricket-app
FIREBASE_PRIVATE_KEY_ID=your-private-key-id-here
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\\nYOUR_FIREBASE_PRIVATE_KEY_HERE\\n-----END PRIVATE KEY-----\\n"
FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@thelinecricket-app.iam.gserviceaccount.com
FIREBASE_CLIENT_ID=your-firebase-client-id
FIREBASE_SERVICE_ACCOUNT_PATH=firebase-service-account.json

# AWS Cognito Configuration (Alternative Authentication)
COGNITO_REGION=us-east-1
COGNITO_USER_POOL_ID=us-east-1_xxxxxxxxx
COGNITO_CLIENT_ID=your-cognito-client-id
COGNITO_CLIENT_SECRET=your-cognito-client-secret

# ===========================================
# FRONTEND CONFIGURATION
# ===========================================

# API Configuration
VITE_API_BASE_URL=http://localhost:5000/api
VITE_APP_ENV=development

# Firebase Configuration for Frontend
VITE_FIREBASE_API_KEY=AIzaSyBxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
VITE_FIREBASE_AUTH_DOMAIN=thelinecricket-app.firebaseapp.com
VITE_FIREBASE_PROJECT_ID=thelinecricket-app
VITE_FIREBASE_STORAGE_BUCKET=thelinecricket-app.appspot.com
VITE_FIREBASE_MESSAGING_SENDER_ID=123456789012
VITE_FIREBASE_APP_ID=1:123456789012:web:abcdef1234567890
VITE_FIREBASE_MEASUREMENT_ID=G-XXXXXXXXXX

# ===========================================
# AUTHENTICATION CONFIGURATION
# ===========================================

# JWT Configuration
JWT_ACCESS_TOKEN_EXPIRES=3600
JWT_REFRESH_TOKEN_EXPIRES=2592000
JWT_ALGORITHM=HS256

# Session Configuration
SESSION_TYPE=redis
SESSION_REDIS=redis://localhost:6379/0
SESSION_PERMANENT=False
SESSION_USE_SIGNER=True
SESSION_KEY_PREFIX=thelinecricket:

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:4173
CORS_HEADERS=Content-Type,Authorization,X-Requested-With
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS

# ===========================================
# SECURITY CONFIGURATION
# ===========================================

# Password Security
BCRYPT_LOG_ROUNDS=12
PASSWORD_MIN_LENGTH=8
PASSWORD_REQUIRE_UPPERCASE=True
PASSWORD_REQUIRE_LOWERCASE=True
PASSWORD_REQUIRE_NUMBERS=True
PASSWORD_REQUIRE_SYMBOLS=True

# Rate Limiting
RATE_LIMIT_STORAGE_URL=redis://localhost:6379/0
RATE_LIMIT_DEFAULT=100 per minute
RATE_LIMIT_AUTH=10 per minute

# ===========================================
# FILE UPLOAD CONFIGURATION
# ===========================================

# File Upload Limits
MAX_CONTENT_LENGTH=16777216
UPLOAD_FOLDER=uploads
ALLOWED_EXTENSIONS=jpg,jpeg,png,gif,mp4,webm,pdf,doc,docx

# AWS S3 Configuration (Optional)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_S3_BUCKET=thelinecricket-uploads
AWS_S3_REGION=us-east-1

# ===========================================
# NOTIFICATION CONFIGURATION
# ===========================================

# Push Notifications
FCM_SERVER_KEY=your-fcm-server-key
FCM_PROJECT_ID=thelinecricket-app

# Email Templates
EMAIL_TEMPLATE_PATH=templates/email
WELCOME_EMAIL_TEMPLATE=welcome.html
RESET_PASSWORD_TEMPLATE=reset_password.html

# ===========================================
# MONITORING AND LOGGING
# ===========================================

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=logs/thelinecricket.log
LOG_MAX_SIZE=10485760
LOG_BACKUP_COUNT=5

# Monitoring
SENTRY_DSN=your-sentry-dsn-here
HEALTH_CHECK_ENDPOINT=/health

# ===========================================
# DEVELOPMENT OVERRIDES
# ===========================================

# Development-specific settings
DEBUG_SQL=False
DEBUG_AUTH=True
DEBUG_EMAIL=False
MOCK_EMAIL=True

# Test Database (Optional)
TEST_DB_NAME=linecricket25_test
TEST_DB_URL=postgresql://postgres:postgres123@localhost:5432/linecricket25_test
""".format(
        secret_key=generate_secret_key(),
        jwt_secret_key=generate_secret_key()
    )
    
    with open('.env', 'w') as f:
        f.write(env_content)
    
    print("‚úÖ .env file created successfully!")
    print("üîê Secret keys have been auto-generated")
    print("‚ö†Ô∏è  Please update the following values with your actual credentials:")
    print("   - Database password")
    print("   - Email credentials")
    print("   - Firebase configuration")
    print("   - AWS credentials (if using)")

def main():
    """Main setup function"""
    print("üèè TheLineCricket Environment Setup")
    print("=" * 40)
    
    # Check if .env already exists
    if os.path.exists('.env'):
        response = input("‚ö†Ô∏è  .env file already exists. Overwrite? (y/N): ")
        if response.lower() != 'y':
            print("‚ùå Setup cancelled.")
            return
    
    # Create .env file
    create_env_file()
    
    print("\nüìã Next Steps:")
    print("1. Update database credentials in .env")
    print("2. Configure Firebase settings")
    print("3. Set up email credentials")
    print("4. Run: python init_database.py")
    print("5. Start the backend: python run.py")

if __name__ == "__main__":
    main()
